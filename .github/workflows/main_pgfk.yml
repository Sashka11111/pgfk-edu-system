name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, pgsql, zip, dom, fileinfo
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader --no-dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Generate .env file
        run: |
          # Копіюємо .env.example як базу
          cp .env.example .env

          # Оновлюємо значення для продакшн
          sed -i 's/APP_ENV=.*/APP_ENV=production/' .env
          sed -i 's/APP_DEBUG=.*/APP_DEBUG=false/' .env
          sed -i 's#APP_URL=.*#APP_URL=${{ secrets.APP_URL }}#' .env

          # Налаштування бази даних
          sed -i 's/DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/' .env
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/' .env
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/' .env
          sed -i 's/DB_SSLMODE=.*/DB_SSLMODE=require/' .env

          # Налаштування електронної пошти
          sed -i 's/MAIL_MAILER=.*/MAIL_MAILER=smtp/' .env
          sed -i 's/MAIL_HOST=.*/MAIL_HOST=smtp.gmail.com/' .env
          sed -i 's/MAIL_PORT=.*/MAIL_PORT=587/' .env
          sed -i 's/MAIL_USERNAME=.*/MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}/' .env
          sed -i 's/MAIL_PASSWORD=.*/MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}/' .env
          sed -i 's/MAIL_ENCRYPTION=.*/MAIL_ENCRYPTION=tls/' .env
          sed -i 's/MAIL_FROM_ADDRESS=.*/MAIL_FROM_ADDRESS="collegeuzhnu@uzhnu.edu.ua"/' .env
          sed -i 's/MAIL_FROM_NAME=.*/MAIL_FROM_NAME="College UzhNU"/' .env

          # Генеруємо ключ та кешуємо конфігурацію
          php artisan key:generate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'pgfk'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .

